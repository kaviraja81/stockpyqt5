# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'stock.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidget,QTableWidgetItem,QVBoxLayout
import requests
import stockapi
import datetime 

class Ui_MainWindow(object):
      
#This function @setupUi is used to set up the Pyqt5 UI with the required labels, Table Widgets

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(450, 60, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(70, 55, 161, 31))
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(80, 120, 121, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(220, 120, 121, 20))
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
    
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(70, 400, 121, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")

        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(250, 150, 200, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")


        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(70, 420, 671, 141))
        self.tableWidget.setRowCount(8)
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget_2 = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_2.setGeometry(QtCore.QRect(70, 180, 256, 211))
        self.tableWidget_2.setRowCount(5)
        self.tableWidget_2.setColumnCount(1)
        self.tableWidget_2.setObjectName("tableWidget_2")
        

        self.tableWidget_3 = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_3.setGeometry(QtCore.QRect(410, 180, 256, 211))
        self.tableWidget_3.setRowCount(4)
        self.tableWidget_3.setColumnCount(1)
        self.tableWidget_3.setObjectName("tableWidget_3")
      
      
        stockprice,initialtime=stockdata.get_stock_data()
        fundamentaldata=stockdata.get_fundamental_stockdata() 
        self.create_tables()    
        self.insert_tables(stockprice,initialtime)
        self.insert_fundamental_into_tables(fundamentaldata)

        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(250, 50, 171, 41))
        self.lineEdit.setObjectName("lineEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Stock Details"))
        self.pushButton.setText(_translate("MainWindow", "Submit"))
        self.pushButton.clicked.connect(self.button_click)
        self.label.setText(_translate("MainWindow", "Enter your Stock Code"))
        self.label_2.setText(_translate("MainWindow", "Stock Name"))
        self.label_3.setText(_translate("MainWindow", "IBM"))
        self.label_4.setText(_translate("MainWindow","Daily Stock Price "))
        self.label_5.setText(_translate("MainWindow","Fundamental Stock Data"))


    #When the Submit Button is clicked, this function is called. Here, the StockAPI program is called and two functions
    # get_stock_data is called to get stock daily prices and get_fundamental_stockdata is called to get fundamental data
    # of the stock. Then the table widgets are called to insert record into the UI 

    def button_click(self):
        self.update()
        
        stockprice,initialtime=stockdata.get_stock_data(self.lineEdit.text())
        fundamentaldata=stockdata.get_fundamental_stockdata(self.lineEdit.text()) 
        
        self.label_3.setText(self.lineEdit.text())
        self.create_tables()    
        self.insert_tables(stockprice,initialtime)
        self.insert_fundamental_into_tables(fundamentaldata)

# This function is called to adjust size of the label after the Header items are set in the Table Widget
    def update(self):

        self.label.adjustSize()
       
# Function Create_tables
# This function is called to create the header items of all the table widgets
    def create_tables(self):

        self.tableWidget.setRowCount(10)
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setItem(0,0,QTableWidgetItem("Date/Time"))
        self.tableWidget.setItem(0,1,QTableWidgetItem("Open"))
        self.tableWidget.setItem(0,2,QTableWidgetItem("High"))
        self.tableWidget.setItem(0,3,QTableWidgetItem("Low"))
        self.tableWidget.setItem(0,4,QTableWidgetItem("Close"))
        self.tableWidget.setItem(0,5,QTableWidgetItem("Volume"))

        self.tableWidget_2.setVerticalHeaderItem(0,QTableWidgetItem("Market (in B)"))
        self.tableWidget_2.setVerticalHeaderItem(1,QTableWidgetItem("EPS"))
        self.tableWidget_2.setVerticalHeaderItem(2,QTableWidgetItem("PE Ratio"))
        self.tableWidget_2.setVerticalHeaderItem(3,QTableWidgetItem("Price to Book Ratio"))
        self.tableWidget_2.setVerticalHeaderItem(4,QTableWidgetItem("Revenue Per Share"))

        self.tableWidget_3.setVerticalHeaderItem(0,QTableWidgetItem("52 Week High"))
        self.tableWidget_3.setVerticalHeaderItem(1,QTableWidgetItem("52 Week Low"))
        self.tableWidget_3.setVerticalHeaderItem(2,QTableWidgetItem("50 Day Moving Average"))
        self.tableWidget_3.setVerticalHeaderItem(3,QTableWidgetItem("200 Day Moving Average"))
       
    # Function insert_tables is used to insert daily price records in the screen 
    #     Only 10 days record are showed on the screen
    def insert_tables(self,stockprice,initialtime):
        
        
        i=1
        for key,value in stockprice.items():
           
            self.tableWidget.setItem(i,0,QTableWidgetItem(key))
            self.tableWidget.setItem(i,1,QTableWidgetItem(stockprice[key]['1. open']))
            self.tableWidget.setItem(i,2,QTableWidgetItem(stockprice[key]['2. high']))
            self.tableWidget.setItem(i,3,QTableWidgetItem(stockprice[key]['3. low']))
            self.tableWidget.setItem(i,4,QTableWidgetItem(stockprice[key]['4. close']))
            self.tableWidget.setItem(i,5,QTableWidgetItem(stockprice[key]['5. volume']))
            i+=1
            if i > 10:
                break

# Fundamental Data of the stock is inserted into the UI

    def insert_fundamental_into_tables(self,stockfundamental):
        
            onebillion=1000000000
            marketcap=int(stockfundamental['MarketCapitalization'])/onebillion
            self.tableWidget_2.setItem(0,0,QTableWidgetItem(str(marketcap)))
            self.tableWidget_2.setItem(0,1,QTableWidgetItem(stockfundamental['EPS']))
            self.tableWidget_2.setItem(0,2,QTableWidgetItem(stockfundamental['PERatio']))
            self.tableWidget_2.setItem(0,3,QTableWidgetItem(stockfundamental['PriceToBookRatio']))
            self.tableWidget_2.setItem(0,4,QTableWidgetItem(stockfundamental['RevenuePerShareTTM']))
            
            self.tableWidget_3.setItem(0,0,QTableWidgetItem(stockfundamental['52WeekHigh']))
            self.tableWidget_3.setItem(0,1,QTableWidgetItem(stockfundamental['52WeekLow']))
            self.tableWidget_3.setItem(0,2,QTableWidgetItem(stockfundamental['50DayMovingAverage']))
            self.tableWidget_3.setItem(0,3,QTableWidgetItem(stockfundamental['200DayMovingAverage']))
                       
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    stockdata= stockapi.apicallstock()
    ui.setupUi(MainWindow)
    
    MainWindow.show()
    sys.exit(app.exec_())
